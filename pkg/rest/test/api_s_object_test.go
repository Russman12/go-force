/*
Salesforce Platform REST API

Testing SObjectApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package rest

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"

	"github.com/russman12/go-force/mocks"
	openapiclient "github.com/russman12/go-force/pkg/rest"
)

func Test_rest_SObjectApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration, mocks.NewTokenSource(t))

	t.Run("Test SObjectApiService CreateRecord", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var sObject string

		resp, httpRes, err := apiClient.SObjectApi.CreateRecord(context.Background(), sObject).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SObjectApiService GetBasicInfo", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var sObject string

		resp, httpRes, err := apiClient.SObjectApi.GetBasicInfo(context.Background(), sObject).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SObjectApiService GetSObjects", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.SObjectApi.GetSObjects(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SObjectApiService RetrieveRecord", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var sObject string
		var recordId string

		resp, httpRes, err := apiClient.SObjectApi.RetrieveRecord(context.Background(), sObject, recordId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SObjectApiService SObjectDescribe", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var sObject string

		resp, httpRes, err := apiClient.SObjectApi.SObjectDescribe(context.Background(), sObject).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
