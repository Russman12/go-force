/*
Salesforce Platform REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 56.0
Contact: russell-laboe@outlook.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// RecordTypeInfoUrls struct for RecordTypeInfoUrls
type RecordTypeInfoUrls struct {
	Layout *string `json:"layout,omitempty"`
}

// NewRecordTypeInfoUrls instantiates a new RecordTypeInfoUrls object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecordTypeInfoUrls() *RecordTypeInfoUrls {
	this := RecordTypeInfoUrls{}
	return &this
}

// NewRecordTypeInfoUrlsWithDefaults instantiates a new RecordTypeInfoUrls object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecordTypeInfoUrlsWithDefaults() *RecordTypeInfoUrls {
	this := RecordTypeInfoUrls{}
	return &this
}

// GetLayout returns the Layout field value if set, zero value otherwise.
func (o *RecordTypeInfoUrls) GetLayout() string {
	if o == nil || isNil(o.Layout) {
		var ret string
		return ret
	}
	return *o.Layout
}

// GetLayoutOk returns a tuple with the Layout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecordTypeInfoUrls) GetLayoutOk() (*string, bool) {
	if o == nil || isNil(o.Layout) {
		return nil, false
	}
	return o.Layout, true
}

// HasLayout returns a boolean if a field has been set.
func (o *RecordTypeInfoUrls) HasLayout() bool {
	if o != nil && !isNil(o.Layout) {
		return true
	}

	return false
}

// SetLayout gets a reference to the given string and assigns it to the Layout field.
func (o *RecordTypeInfoUrls) SetLayout(v string) {
	o.Layout = &v
}

func (o RecordTypeInfoUrls) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Layout) {
		toSerialize["layout"] = o.Layout
	}
	return json.Marshal(toSerialize)
}

type NullableRecordTypeInfoUrls struct {
	value *RecordTypeInfoUrls
	isSet bool
}

func (v NullableRecordTypeInfoUrls) Get() *RecordTypeInfoUrls {
	return v.value
}

func (v *NullableRecordTypeInfoUrls) Set(val *RecordTypeInfoUrls) {
	v.value = val
	v.isSet = true
}

func (v NullableRecordTypeInfoUrls) IsSet() bool {
	return v.isSet
}

func (v *NullableRecordTypeInfoUrls) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecordTypeInfoUrls(val *RecordTypeInfoUrls) *NullableRecordTypeInfoUrls {
	return &NullableRecordTypeInfoUrls{value: val, isSet: true}
}

func (v NullableRecordTypeInfoUrls) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecordTypeInfoUrls) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
