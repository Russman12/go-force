/*
Salesforce Platform REST APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 56.0
Contact: russell-laboe@outlook.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// ActionOverrides struct for ActionOverrides
type ActionOverrides struct {
	FormFactor         *string        `json:"formFactor,omitempty"`
	IsAvailableInTouch *bool          `json:"isAvailableInTouch,omitempty"`
	Name               *string        `json:"name,omitempty"`
	PageId             *string        `json:"pageId,omitempty"`
	Url                NullableString `json:"url,omitempty"`
}

// NewActionOverrides instantiates a new ActionOverrides object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionOverrides() *ActionOverrides {
	this := ActionOverrides{}
	return &this
}

// NewActionOverridesWithDefaults instantiates a new ActionOverrides object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionOverridesWithDefaults() *ActionOverrides {
	this := ActionOverrides{}
	return &this
}

// GetFormFactor returns the FormFactor field value if set, zero value otherwise.
func (o *ActionOverrides) GetFormFactor() string {
	if o == nil || isNil(o.FormFactor) {
		var ret string
		return ret
	}
	return *o.FormFactor
}

// GetFormFactorOk returns a tuple with the FormFactor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionOverrides) GetFormFactorOk() (*string, bool) {
	if o == nil || isNil(o.FormFactor) {
		return nil, false
	}
	return o.FormFactor, true
}

// HasFormFactor returns a boolean if a field has been set.
func (o *ActionOverrides) HasFormFactor() bool {
	if o != nil && !isNil(o.FormFactor) {
		return true
	}

	return false
}

// SetFormFactor gets a reference to the given string and assigns it to the FormFactor field.
func (o *ActionOverrides) SetFormFactor(v string) {
	o.FormFactor = &v
}

// GetIsAvailableInTouch returns the IsAvailableInTouch field value if set, zero value otherwise.
func (o *ActionOverrides) GetIsAvailableInTouch() bool {
	if o == nil || isNil(o.IsAvailableInTouch) {
		var ret bool
		return ret
	}
	return *o.IsAvailableInTouch
}

// GetIsAvailableInTouchOk returns a tuple with the IsAvailableInTouch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionOverrides) GetIsAvailableInTouchOk() (*bool, bool) {
	if o == nil || isNil(o.IsAvailableInTouch) {
		return nil, false
	}
	return o.IsAvailableInTouch, true
}

// HasIsAvailableInTouch returns a boolean if a field has been set.
func (o *ActionOverrides) HasIsAvailableInTouch() bool {
	if o != nil && !isNil(o.IsAvailableInTouch) {
		return true
	}

	return false
}

// SetIsAvailableInTouch gets a reference to the given bool and assigns it to the IsAvailableInTouch field.
func (o *ActionOverrides) SetIsAvailableInTouch(v bool) {
	o.IsAvailableInTouch = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ActionOverrides) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionOverrides) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ActionOverrides) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ActionOverrides) SetName(v string) {
	o.Name = &v
}

// GetPageId returns the PageId field value if set, zero value otherwise.
func (o *ActionOverrides) GetPageId() string {
	if o == nil || isNil(o.PageId) {
		var ret string
		return ret
	}
	return *o.PageId
}

// GetPageIdOk returns a tuple with the PageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionOverrides) GetPageIdOk() (*string, bool) {
	if o == nil || isNil(o.PageId) {
		return nil, false
	}
	return o.PageId, true
}

// HasPageId returns a boolean if a field has been set.
func (o *ActionOverrides) HasPageId() bool {
	if o != nil && !isNil(o.PageId) {
		return true
	}

	return false
}

// SetPageId gets a reference to the given string and assigns it to the PageId field.
func (o *ActionOverrides) SetPageId(v string) {
	o.PageId = &v
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActionOverrides) GetUrl() string {
	if o == nil || isNil(o.Url.Get()) {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActionOverrides) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *ActionOverrides) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *ActionOverrides) SetUrl(v string) {
	o.Url.Set(&v)
}

// SetUrlNil sets the value for Url to be an explicit nil
func (o *ActionOverrides) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *ActionOverrides) UnsetUrl() {
	o.Url.Unset()
}

func (o ActionOverrides) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.FormFactor) {
		toSerialize["formFactor"] = o.FormFactor
	}
	if !isNil(o.IsAvailableInTouch) {
		toSerialize["isAvailableInTouch"] = o.IsAvailableInTouch
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.PageId) {
		toSerialize["pageId"] = o.PageId
	}
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableActionOverrides struct {
	value *ActionOverrides
	isSet bool
}

func (v NullableActionOverrides) Get() *ActionOverrides {
	return v.value
}

func (v *NullableActionOverrides) Set(val *ActionOverrides) {
	v.value = val
	v.isSet = true
}

func (v NullableActionOverrides) IsSet() bool {
	return v.isSet
}

func (v *NullableActionOverrides) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionOverrides(val *ActionOverrides) *NullableActionOverrides {
	return &NullableActionOverrides{value: val, isSet: true}
}

func (v NullableActionOverrides) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionOverrides) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
