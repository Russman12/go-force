/*
Salesforce Platform REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 56.0
Contact: russell-laboe@outlook.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tooling

import (
	"encoding/json"
)

// QueryResult struct for QueryResult
type QueryResult struct {
	Size int32 `json:"size"`
	TotalSize int32 `json:"totalSize"`
	Done bool `json:"done"`
	QueryLocator NullableString `json:"queryLocator"`
	EntityTypeName string `json:"entityTypeName"`
	Records []map[string]interface{} `json:"records"`
}

// NewQueryResult instantiates a new QueryResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryResult(size int32, totalSize int32, done bool, queryLocator NullableString, entityTypeName string, records []map[string]interface{}) *QueryResult {
	this := QueryResult{}
	this.Size = size
	this.TotalSize = totalSize
	this.Done = done
	this.QueryLocator = queryLocator
	this.EntityTypeName = entityTypeName
	this.Records = records
	return &this
}

// NewQueryResultWithDefaults instantiates a new QueryResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryResultWithDefaults() *QueryResult {
	this := QueryResult{}
	return &this
}

// GetSize returns the Size field value
func (o *QueryResult) GetSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *QueryResult) GetSizeOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *QueryResult) SetSize(v int32) {
	o.Size = v
}

// GetTotalSize returns the TotalSize field value
func (o *QueryResult) GetTotalSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalSize
}

// GetTotalSizeOk returns a tuple with the TotalSize field value
// and a boolean to check if the value has been set.
func (o *QueryResult) GetTotalSizeOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.TotalSize, true
}

// SetTotalSize sets field value
func (o *QueryResult) SetTotalSize(v int32) {
	o.TotalSize = v
}

// GetDone returns the Done field value
func (o *QueryResult) GetDone() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Done
}

// GetDoneOk returns a tuple with the Done field value
// and a boolean to check if the value has been set.
func (o *QueryResult) GetDoneOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Done, true
}

// SetDone sets field value
func (o *QueryResult) SetDone(v bool) {
	o.Done = v
}

// GetQueryLocator returns the QueryLocator field value
// If the value is explicit nil, the zero value for string will be returned
func (o *QueryResult) GetQueryLocator() string {
	if o == nil || o.QueryLocator.Get() == nil {
		var ret string
		return ret
	}

	return *o.QueryLocator.Get()
}

// GetQueryLocatorOk returns a tuple with the QueryLocator field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QueryResult) GetQueryLocatorOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.QueryLocator.Get(), o.QueryLocator.IsSet()
}

// SetQueryLocator sets field value
func (o *QueryResult) SetQueryLocator(v string) {
	o.QueryLocator.Set(&v)
}

// GetEntityTypeName returns the EntityTypeName field value
func (o *QueryResult) GetEntityTypeName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityTypeName
}

// GetEntityTypeNameOk returns a tuple with the EntityTypeName field value
// and a boolean to check if the value has been set.
func (o *QueryResult) GetEntityTypeNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.EntityTypeName, true
}

// SetEntityTypeName sets field value
func (o *QueryResult) SetEntityTypeName(v string) {
	o.EntityTypeName = v
}

// GetRecords returns the Records field value
func (o *QueryResult) GetRecords() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.Records
}

// GetRecordsOk returns a tuple with the Records field value
// and a boolean to check if the value has been set.
func (o *QueryResult) GetRecordsOk() ([]map[string]interface{}, bool) {
	if o == nil {
    return nil, false
	}
	return o.Records, true
}

// SetRecords sets field value
func (o *QueryResult) SetRecords(v []map[string]interface{}) {
	o.Records = v
}

func (o QueryResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["size"] = o.Size
	}
	if true {
		toSerialize["totalSize"] = o.TotalSize
	}
	if true {
		toSerialize["done"] = o.Done
	}
	if true {
		toSerialize["queryLocator"] = o.QueryLocator.Get()
	}
	if true {
		toSerialize["entityTypeName"] = o.EntityTypeName
	}
	if true {
		toSerialize["records"] = o.Records
	}
	return json.Marshal(toSerialize)
}

type NullableQueryResult struct {
	value *QueryResult
	isSet bool
}

func (v NullableQueryResult) Get() *QueryResult {
	return v.value
}

func (v *NullableQueryResult) Set(val *QueryResult) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryResult) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryResult(val *QueryResult) *NullableQueryResult {
	return &NullableQueryResult{value: val, isSet: true}
}

func (v NullableQueryResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


