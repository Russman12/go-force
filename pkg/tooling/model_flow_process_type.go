/*
Salesforce Platform REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 56.0
Contact: russell-laboe@outlook.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tooling

import (
	"encoding/json"
	"fmt"
)

// FlowProcessType the model 'FlowProcessType'
type FlowProcessType string

// List of FlowProcessType
const (
	FLOWPROCESSTYPE_ACTION_CADENCE_AUTOLAUNCHED_FLOW FlowProcessType = "ActionCadenceAutolaunchedFlow"
	FLOWPROCESSTYPE_ACTION_CADENCE_STEP_FLOW FlowProcessType = "ActionCadenceStepFlow"
	FLOWPROCESSTYPE_APPOINTMENTS FlowProcessType = "Appointments"
	FLOWPROCESSTYPE_AUTO_LAUNCHED_FLOW FlowProcessType = "AutoLaunchedFlow"
	FLOWPROCESSTYPE_CHECKOUT_FLOW FlowProcessType = "CheckoutFlow"
	FLOWPROCESSTYPE_CONTACT_REQUEST_FLOW FlowProcessType = "ContactRequestFlow"
	FLOWPROCESSTYPE_CUSTOMER_LIFECYCLE FlowProcessType = "CustomerLifecycle"
	FLOWPROCESSTYPE_CUSTOM_EVENT FlowProcessType = "CustomEvent"
	FLOWPROCESSTYPE_EVALUATION_FLOW FlowProcessType = "EvaluationFlow"
	FLOWPROCESSTYPE_FIELD_SERVICE_MOBILE FlowProcessType = "FieldServiceMobile"
	FLOWPROCESSTYPE_FIELD_SERVICE_WEB FlowProcessType = "FieldServiceWeb"
	FLOWPROCESSTYPE_FLOW FlowProcessType = "Flow"
	FLOWPROCESSTYPE_FSC_LENDING FlowProcessType = "FSCLending"
	FLOWPROCESSTYPE_INVOCABLE_PROCESS FlowProcessType = "InvocableProcess"
	FLOWPROCESSTYPE_LOGIN_FLOW FlowProcessType = "LoginFlow"
	FLOWPROCESSTYPE_LOYALTY_MANAGEMENT_FLOW FlowProcessType = "LoyaltyManagementFlow"
	FLOWPROCESSTYPE_ORCHESTRATOR FlowProcessType = "Orchestrator"
	FLOWPROCESSTYPE_ROUTING_FLOW FlowProcessType = "RoutingFlow"
	FLOWPROCESSTYPE_SURVEY FlowProcessType = "Survey"
	FLOWPROCESSTYPE_SURVEY_ENRICH FlowProcessType = "SurveyEnrich"
	FLOWPROCESSTYPE_WORKFLOW FlowProcessType = "Workflow"
)

// All allowed values of FlowProcessType enum
var AllowedFlowProcessTypeEnumValues = []FlowProcessType{
	"ActionCadenceAutolaunchedFlow",
	"ActionCadenceStepFlow",
	"Appointments",
	"AutoLaunchedFlow",
	"CheckoutFlow",
	"ContactRequestFlow",
	"CustomerLifecycle",
	"CustomEvent",
	"EvaluationFlow",
	"FieldServiceMobile",
	"FieldServiceWeb",
	"Flow",
	"FSCLending",
	"InvocableProcess",
	"LoginFlow",
	"LoyaltyManagementFlow",
	"Orchestrator",
	"RoutingFlow",
	"Survey",
	"SurveyEnrich",
	"Workflow",
}

func (v *FlowProcessType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := FlowProcessType(value)
	for _, existing := range AllowedFlowProcessTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid FlowProcessType", value)
}

// NewFlowProcessTypeFromValue returns a pointer to a valid FlowProcessType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewFlowProcessTypeFromValue(v string) (*FlowProcessType, error) {
	ev := FlowProcessType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for FlowProcessType: valid values are %v", v, AllowedFlowProcessTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v FlowProcessType) IsValid() bool {
	for _, existing := range AllowedFlowProcessTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to FlowProcessType value
func (v FlowProcessType) Ptr() *FlowProcessType {
	return &v
}

type NullableFlowProcessType struct {
	value *FlowProcessType
	isSet bool
}

func (v NullableFlowProcessType) Get() *FlowProcessType {
	return v.value
}

func (v *NullableFlowProcessType) Set(val *FlowProcessType) {
	v.value = val
	v.isSet = true
}

func (v NullableFlowProcessType) IsSet() bool {
	return v.isSet
}

func (v *NullableFlowProcessType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlowProcessType(val *FlowProcessType) *NullableFlowProcessType {
	return &NullableFlowProcessType{value: val, isSet: true}
}

func (v NullableFlowProcessType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlowProcessType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

