/*
Salesforce Platform REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 56.0
Contact: russell-laboe@outlook.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tooling

import (
	"encoding/json"
)

// DescribeSObjectResultExt struct for DescribeSObjectResultExt
type DescribeSObjectResultExt struct {
	ActionOverrides []ActionOverride `json:"actionOverrides,omitempty"`
	ChildRelationships []ChildRelationship `json:"childRelationships,omitempty"`
	CompactLayoutable *bool `json:"compactLayoutable,omitempty"`
	DefaultImplementation *string `json:"defaultImplementation,omitempty"`
	ExtendedBy *string `json:"extendedBy,omitempty"`
	ExtendsInterfaces *string `json:"extendsInterfaces,omitempty"`
	Fields []Field `json:"fields,omitempty"`
	ImplementedBy *string `json:"implementedBy,omitempty"`
	ImplementsInterfaces *string `json:"implementsInterfaces,omitempty"`
	Listviewable *string `json:"listviewable,omitempty"`
	LookupLayoutable *string `json:"lookupLayoutable,omitempty"`
	NamedLayoutInfos []NamedLayoutInfo `json:"namedLayoutInfos,omitempty"`
	NetworkScopeFieldName *string `json:"networkScopeFieldName,omitempty"`
	RecordTypeInfos []RecordTypeInfo `json:"recordTypeInfos,omitempty"`
	SearchLayoutable *bool `json:"searchLayoutable,omitempty"`
	SobjectDescribeOption *string `json:"sobjectDescribeOption,omitempty"`
	SupportedScopes []ScopeInfo `json:"supportedScopes,omitempty"`
}

// NewDescribeSObjectResultExt instantiates a new DescribeSObjectResultExt object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeSObjectResultExt() *DescribeSObjectResultExt {
	this := DescribeSObjectResultExt{}
	return &this
}

// NewDescribeSObjectResultExtWithDefaults instantiates a new DescribeSObjectResultExt object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeSObjectResultExtWithDefaults() *DescribeSObjectResultExt {
	this := DescribeSObjectResultExt{}
	return &this
}

// GetActionOverrides returns the ActionOverrides field value if set, zero value otherwise.
func (o *DescribeSObjectResultExt) GetActionOverrides() []ActionOverride {
	if o == nil || isNil(o.ActionOverrides) {
		var ret []ActionOverride
		return ret
	}
	return o.ActionOverrides
}

// GetActionOverridesOk returns a tuple with the ActionOverrides field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeSObjectResultExt) GetActionOverridesOk() ([]ActionOverride, bool) {
	if o == nil || isNil(o.ActionOverrides) {
    return nil, false
	}
	return o.ActionOverrides, true
}

// HasActionOverrides returns a boolean if a field has been set.
func (o *DescribeSObjectResultExt) HasActionOverrides() bool {
	if o != nil && !isNil(o.ActionOverrides) {
		return true
	}

	return false
}

// SetActionOverrides gets a reference to the given []ActionOverride and assigns it to the ActionOverrides field.
func (o *DescribeSObjectResultExt) SetActionOverrides(v []ActionOverride) {
	o.ActionOverrides = v
}

// GetChildRelationships returns the ChildRelationships field value if set, zero value otherwise.
func (o *DescribeSObjectResultExt) GetChildRelationships() []ChildRelationship {
	if o == nil || isNil(o.ChildRelationships) {
		var ret []ChildRelationship
		return ret
	}
	return o.ChildRelationships
}

// GetChildRelationshipsOk returns a tuple with the ChildRelationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeSObjectResultExt) GetChildRelationshipsOk() ([]ChildRelationship, bool) {
	if o == nil || isNil(o.ChildRelationships) {
    return nil, false
	}
	return o.ChildRelationships, true
}

// HasChildRelationships returns a boolean if a field has been set.
func (o *DescribeSObjectResultExt) HasChildRelationships() bool {
	if o != nil && !isNil(o.ChildRelationships) {
		return true
	}

	return false
}

// SetChildRelationships gets a reference to the given []ChildRelationship and assigns it to the ChildRelationships field.
func (o *DescribeSObjectResultExt) SetChildRelationships(v []ChildRelationship) {
	o.ChildRelationships = v
}

// GetCompactLayoutable returns the CompactLayoutable field value if set, zero value otherwise.
func (o *DescribeSObjectResultExt) GetCompactLayoutable() bool {
	if o == nil || isNil(o.CompactLayoutable) {
		var ret bool
		return ret
	}
	return *o.CompactLayoutable
}

// GetCompactLayoutableOk returns a tuple with the CompactLayoutable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeSObjectResultExt) GetCompactLayoutableOk() (*bool, bool) {
	if o == nil || isNil(o.CompactLayoutable) {
    return nil, false
	}
	return o.CompactLayoutable, true
}

// HasCompactLayoutable returns a boolean if a field has been set.
func (o *DescribeSObjectResultExt) HasCompactLayoutable() bool {
	if o != nil && !isNil(o.CompactLayoutable) {
		return true
	}

	return false
}

// SetCompactLayoutable gets a reference to the given bool and assigns it to the CompactLayoutable field.
func (o *DescribeSObjectResultExt) SetCompactLayoutable(v bool) {
	o.CompactLayoutable = &v
}

// GetDefaultImplementation returns the DefaultImplementation field value if set, zero value otherwise.
func (o *DescribeSObjectResultExt) GetDefaultImplementation() string {
	if o == nil || isNil(o.DefaultImplementation) {
		var ret string
		return ret
	}
	return *o.DefaultImplementation
}

// GetDefaultImplementationOk returns a tuple with the DefaultImplementation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeSObjectResultExt) GetDefaultImplementationOk() (*string, bool) {
	if o == nil || isNil(o.DefaultImplementation) {
    return nil, false
	}
	return o.DefaultImplementation, true
}

// HasDefaultImplementation returns a boolean if a field has been set.
func (o *DescribeSObjectResultExt) HasDefaultImplementation() bool {
	if o != nil && !isNil(o.DefaultImplementation) {
		return true
	}

	return false
}

// SetDefaultImplementation gets a reference to the given string and assigns it to the DefaultImplementation field.
func (o *DescribeSObjectResultExt) SetDefaultImplementation(v string) {
	o.DefaultImplementation = &v
}

// GetExtendedBy returns the ExtendedBy field value if set, zero value otherwise.
func (o *DescribeSObjectResultExt) GetExtendedBy() string {
	if o == nil || isNil(o.ExtendedBy) {
		var ret string
		return ret
	}
	return *o.ExtendedBy
}

// GetExtendedByOk returns a tuple with the ExtendedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeSObjectResultExt) GetExtendedByOk() (*string, bool) {
	if o == nil || isNil(o.ExtendedBy) {
    return nil, false
	}
	return o.ExtendedBy, true
}

// HasExtendedBy returns a boolean if a field has been set.
func (o *DescribeSObjectResultExt) HasExtendedBy() bool {
	if o != nil && !isNil(o.ExtendedBy) {
		return true
	}

	return false
}

// SetExtendedBy gets a reference to the given string and assigns it to the ExtendedBy field.
func (o *DescribeSObjectResultExt) SetExtendedBy(v string) {
	o.ExtendedBy = &v
}

// GetExtendsInterfaces returns the ExtendsInterfaces field value if set, zero value otherwise.
func (o *DescribeSObjectResultExt) GetExtendsInterfaces() string {
	if o == nil || isNil(o.ExtendsInterfaces) {
		var ret string
		return ret
	}
	return *o.ExtendsInterfaces
}

// GetExtendsInterfacesOk returns a tuple with the ExtendsInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeSObjectResultExt) GetExtendsInterfacesOk() (*string, bool) {
	if o == nil || isNil(o.ExtendsInterfaces) {
    return nil, false
	}
	return o.ExtendsInterfaces, true
}

// HasExtendsInterfaces returns a boolean if a field has been set.
func (o *DescribeSObjectResultExt) HasExtendsInterfaces() bool {
	if o != nil && !isNil(o.ExtendsInterfaces) {
		return true
	}

	return false
}

// SetExtendsInterfaces gets a reference to the given string and assigns it to the ExtendsInterfaces field.
func (o *DescribeSObjectResultExt) SetExtendsInterfaces(v string) {
	o.ExtendsInterfaces = &v
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *DescribeSObjectResultExt) GetFields() []Field {
	if o == nil || isNil(o.Fields) {
		var ret []Field
		return ret
	}
	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeSObjectResultExt) GetFieldsOk() ([]Field, bool) {
	if o == nil || isNil(o.Fields) {
    return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *DescribeSObjectResultExt) HasFields() bool {
	if o != nil && !isNil(o.Fields) {
		return true
	}

	return false
}

// SetFields gets a reference to the given []Field and assigns it to the Fields field.
func (o *DescribeSObjectResultExt) SetFields(v []Field) {
	o.Fields = v
}

// GetImplementedBy returns the ImplementedBy field value if set, zero value otherwise.
func (o *DescribeSObjectResultExt) GetImplementedBy() string {
	if o == nil || isNil(o.ImplementedBy) {
		var ret string
		return ret
	}
	return *o.ImplementedBy
}

// GetImplementedByOk returns a tuple with the ImplementedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeSObjectResultExt) GetImplementedByOk() (*string, bool) {
	if o == nil || isNil(o.ImplementedBy) {
    return nil, false
	}
	return o.ImplementedBy, true
}

// HasImplementedBy returns a boolean if a field has been set.
func (o *DescribeSObjectResultExt) HasImplementedBy() bool {
	if o != nil && !isNil(o.ImplementedBy) {
		return true
	}

	return false
}

// SetImplementedBy gets a reference to the given string and assigns it to the ImplementedBy field.
func (o *DescribeSObjectResultExt) SetImplementedBy(v string) {
	o.ImplementedBy = &v
}

// GetImplementsInterfaces returns the ImplementsInterfaces field value if set, zero value otherwise.
func (o *DescribeSObjectResultExt) GetImplementsInterfaces() string {
	if o == nil || isNil(o.ImplementsInterfaces) {
		var ret string
		return ret
	}
	return *o.ImplementsInterfaces
}

// GetImplementsInterfacesOk returns a tuple with the ImplementsInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeSObjectResultExt) GetImplementsInterfacesOk() (*string, bool) {
	if o == nil || isNil(o.ImplementsInterfaces) {
    return nil, false
	}
	return o.ImplementsInterfaces, true
}

// HasImplementsInterfaces returns a boolean if a field has been set.
func (o *DescribeSObjectResultExt) HasImplementsInterfaces() bool {
	if o != nil && !isNil(o.ImplementsInterfaces) {
		return true
	}

	return false
}

// SetImplementsInterfaces gets a reference to the given string and assigns it to the ImplementsInterfaces field.
func (o *DescribeSObjectResultExt) SetImplementsInterfaces(v string) {
	o.ImplementsInterfaces = &v
}

// GetListviewable returns the Listviewable field value if set, zero value otherwise.
func (o *DescribeSObjectResultExt) GetListviewable() string {
	if o == nil || isNil(o.Listviewable) {
		var ret string
		return ret
	}
	return *o.Listviewable
}

// GetListviewableOk returns a tuple with the Listviewable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeSObjectResultExt) GetListviewableOk() (*string, bool) {
	if o == nil || isNil(o.Listviewable) {
    return nil, false
	}
	return o.Listviewable, true
}

// HasListviewable returns a boolean if a field has been set.
func (o *DescribeSObjectResultExt) HasListviewable() bool {
	if o != nil && !isNil(o.Listviewable) {
		return true
	}

	return false
}

// SetListviewable gets a reference to the given string and assigns it to the Listviewable field.
func (o *DescribeSObjectResultExt) SetListviewable(v string) {
	o.Listviewable = &v
}

// GetLookupLayoutable returns the LookupLayoutable field value if set, zero value otherwise.
func (o *DescribeSObjectResultExt) GetLookupLayoutable() string {
	if o == nil || isNil(o.LookupLayoutable) {
		var ret string
		return ret
	}
	return *o.LookupLayoutable
}

// GetLookupLayoutableOk returns a tuple with the LookupLayoutable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeSObjectResultExt) GetLookupLayoutableOk() (*string, bool) {
	if o == nil || isNil(o.LookupLayoutable) {
    return nil, false
	}
	return o.LookupLayoutable, true
}

// HasLookupLayoutable returns a boolean if a field has been set.
func (o *DescribeSObjectResultExt) HasLookupLayoutable() bool {
	if o != nil && !isNil(o.LookupLayoutable) {
		return true
	}

	return false
}

// SetLookupLayoutable gets a reference to the given string and assigns it to the LookupLayoutable field.
func (o *DescribeSObjectResultExt) SetLookupLayoutable(v string) {
	o.LookupLayoutable = &v
}

// GetNamedLayoutInfos returns the NamedLayoutInfos field value if set, zero value otherwise.
func (o *DescribeSObjectResultExt) GetNamedLayoutInfos() []NamedLayoutInfo {
	if o == nil || isNil(o.NamedLayoutInfos) {
		var ret []NamedLayoutInfo
		return ret
	}
	return o.NamedLayoutInfos
}

// GetNamedLayoutInfosOk returns a tuple with the NamedLayoutInfos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeSObjectResultExt) GetNamedLayoutInfosOk() ([]NamedLayoutInfo, bool) {
	if o == nil || isNil(o.NamedLayoutInfos) {
    return nil, false
	}
	return o.NamedLayoutInfos, true
}

// HasNamedLayoutInfos returns a boolean if a field has been set.
func (o *DescribeSObjectResultExt) HasNamedLayoutInfos() bool {
	if o != nil && !isNil(o.NamedLayoutInfos) {
		return true
	}

	return false
}

// SetNamedLayoutInfos gets a reference to the given []NamedLayoutInfo and assigns it to the NamedLayoutInfos field.
func (o *DescribeSObjectResultExt) SetNamedLayoutInfos(v []NamedLayoutInfo) {
	o.NamedLayoutInfos = v
}

// GetNetworkScopeFieldName returns the NetworkScopeFieldName field value if set, zero value otherwise.
func (o *DescribeSObjectResultExt) GetNetworkScopeFieldName() string {
	if o == nil || isNil(o.NetworkScopeFieldName) {
		var ret string
		return ret
	}
	return *o.NetworkScopeFieldName
}

// GetNetworkScopeFieldNameOk returns a tuple with the NetworkScopeFieldName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeSObjectResultExt) GetNetworkScopeFieldNameOk() (*string, bool) {
	if o == nil || isNil(o.NetworkScopeFieldName) {
    return nil, false
	}
	return o.NetworkScopeFieldName, true
}

// HasNetworkScopeFieldName returns a boolean if a field has been set.
func (o *DescribeSObjectResultExt) HasNetworkScopeFieldName() bool {
	if o != nil && !isNil(o.NetworkScopeFieldName) {
		return true
	}

	return false
}

// SetNetworkScopeFieldName gets a reference to the given string and assigns it to the NetworkScopeFieldName field.
func (o *DescribeSObjectResultExt) SetNetworkScopeFieldName(v string) {
	o.NetworkScopeFieldName = &v
}

// GetRecordTypeInfos returns the RecordTypeInfos field value if set, zero value otherwise.
func (o *DescribeSObjectResultExt) GetRecordTypeInfos() []RecordTypeInfo {
	if o == nil || isNil(o.RecordTypeInfos) {
		var ret []RecordTypeInfo
		return ret
	}
	return o.RecordTypeInfos
}

// GetRecordTypeInfosOk returns a tuple with the RecordTypeInfos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeSObjectResultExt) GetRecordTypeInfosOk() ([]RecordTypeInfo, bool) {
	if o == nil || isNil(o.RecordTypeInfos) {
    return nil, false
	}
	return o.RecordTypeInfos, true
}

// HasRecordTypeInfos returns a boolean if a field has been set.
func (o *DescribeSObjectResultExt) HasRecordTypeInfos() bool {
	if o != nil && !isNil(o.RecordTypeInfos) {
		return true
	}

	return false
}

// SetRecordTypeInfos gets a reference to the given []RecordTypeInfo and assigns it to the RecordTypeInfos field.
func (o *DescribeSObjectResultExt) SetRecordTypeInfos(v []RecordTypeInfo) {
	o.RecordTypeInfos = v
}

// GetSearchLayoutable returns the SearchLayoutable field value if set, zero value otherwise.
func (o *DescribeSObjectResultExt) GetSearchLayoutable() bool {
	if o == nil || isNil(o.SearchLayoutable) {
		var ret bool
		return ret
	}
	return *o.SearchLayoutable
}

// GetSearchLayoutableOk returns a tuple with the SearchLayoutable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeSObjectResultExt) GetSearchLayoutableOk() (*bool, bool) {
	if o == nil || isNil(o.SearchLayoutable) {
    return nil, false
	}
	return o.SearchLayoutable, true
}

// HasSearchLayoutable returns a boolean if a field has been set.
func (o *DescribeSObjectResultExt) HasSearchLayoutable() bool {
	if o != nil && !isNil(o.SearchLayoutable) {
		return true
	}

	return false
}

// SetSearchLayoutable gets a reference to the given bool and assigns it to the SearchLayoutable field.
func (o *DescribeSObjectResultExt) SetSearchLayoutable(v bool) {
	o.SearchLayoutable = &v
}

// GetSobjectDescribeOption returns the SobjectDescribeOption field value if set, zero value otherwise.
func (o *DescribeSObjectResultExt) GetSobjectDescribeOption() string {
	if o == nil || isNil(o.SobjectDescribeOption) {
		var ret string
		return ret
	}
	return *o.SobjectDescribeOption
}

// GetSobjectDescribeOptionOk returns a tuple with the SobjectDescribeOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeSObjectResultExt) GetSobjectDescribeOptionOk() (*string, bool) {
	if o == nil || isNil(o.SobjectDescribeOption) {
    return nil, false
	}
	return o.SobjectDescribeOption, true
}

// HasSobjectDescribeOption returns a boolean if a field has been set.
func (o *DescribeSObjectResultExt) HasSobjectDescribeOption() bool {
	if o != nil && !isNil(o.SobjectDescribeOption) {
		return true
	}

	return false
}

// SetSobjectDescribeOption gets a reference to the given string and assigns it to the SobjectDescribeOption field.
func (o *DescribeSObjectResultExt) SetSobjectDescribeOption(v string) {
	o.SobjectDescribeOption = &v
}

// GetSupportedScopes returns the SupportedScopes field value if set, zero value otherwise.
func (o *DescribeSObjectResultExt) GetSupportedScopes() []ScopeInfo {
	if o == nil || isNil(o.SupportedScopes) {
		var ret []ScopeInfo
		return ret
	}
	return o.SupportedScopes
}

// GetSupportedScopesOk returns a tuple with the SupportedScopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeSObjectResultExt) GetSupportedScopesOk() ([]ScopeInfo, bool) {
	if o == nil || isNil(o.SupportedScopes) {
    return nil, false
	}
	return o.SupportedScopes, true
}

// HasSupportedScopes returns a boolean if a field has been set.
func (o *DescribeSObjectResultExt) HasSupportedScopes() bool {
	if o != nil && !isNil(o.SupportedScopes) {
		return true
	}

	return false
}

// SetSupportedScopes gets a reference to the given []ScopeInfo and assigns it to the SupportedScopes field.
func (o *DescribeSObjectResultExt) SetSupportedScopes(v []ScopeInfo) {
	o.SupportedScopes = v
}

func (o DescribeSObjectResultExt) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ActionOverrides) {
		toSerialize["actionOverrides"] = o.ActionOverrides
	}
	if !isNil(o.ChildRelationships) {
		toSerialize["childRelationships"] = o.ChildRelationships
	}
	if !isNil(o.CompactLayoutable) {
		toSerialize["compactLayoutable"] = o.CompactLayoutable
	}
	if !isNil(o.DefaultImplementation) {
		toSerialize["defaultImplementation"] = o.DefaultImplementation
	}
	if !isNil(o.ExtendedBy) {
		toSerialize["extendedBy"] = o.ExtendedBy
	}
	if !isNil(o.ExtendsInterfaces) {
		toSerialize["extendsInterfaces"] = o.ExtendsInterfaces
	}
	if !isNil(o.Fields) {
		toSerialize["fields"] = o.Fields
	}
	if !isNil(o.ImplementedBy) {
		toSerialize["implementedBy"] = o.ImplementedBy
	}
	if !isNil(o.ImplementsInterfaces) {
		toSerialize["implementsInterfaces"] = o.ImplementsInterfaces
	}
	if !isNil(o.Listviewable) {
		toSerialize["listviewable"] = o.Listviewable
	}
	if !isNil(o.LookupLayoutable) {
		toSerialize["lookupLayoutable"] = o.LookupLayoutable
	}
	if !isNil(o.NamedLayoutInfos) {
		toSerialize["namedLayoutInfos"] = o.NamedLayoutInfos
	}
	if !isNil(o.NetworkScopeFieldName) {
		toSerialize["networkScopeFieldName"] = o.NetworkScopeFieldName
	}
	if !isNil(o.RecordTypeInfos) {
		toSerialize["recordTypeInfos"] = o.RecordTypeInfos
	}
	if !isNil(o.SearchLayoutable) {
		toSerialize["searchLayoutable"] = o.SearchLayoutable
	}
	if !isNil(o.SobjectDescribeOption) {
		toSerialize["sobjectDescribeOption"] = o.SobjectDescribeOption
	}
	if !isNil(o.SupportedScopes) {
		toSerialize["supportedScopes"] = o.SupportedScopes
	}
	return json.Marshal(toSerialize)
}

type NullableDescribeSObjectResultExt struct {
	value *DescribeSObjectResultExt
	isSet bool
}

func (v NullableDescribeSObjectResultExt) Get() *DescribeSObjectResultExt {
	return v.value
}

func (v *NullableDescribeSObjectResultExt) Set(val *DescribeSObjectResultExt) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeSObjectResultExt) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeSObjectResultExt) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeSObjectResultExt(val *DescribeSObjectResultExt) *NullableDescribeSObjectResultExt {
	return &NullableDescribeSObjectResultExt{value: val, isSet: true}
}

func (v NullableDescribeSObjectResultExt) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeSObjectResultExt) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


