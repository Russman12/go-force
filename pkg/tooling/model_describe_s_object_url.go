/*
Salesforce Platform REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 56.0
Contact: russell-laboe@outlook.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tooling

import (
	"encoding/json"
)

// DescribeSObjectURL struct for DescribeSObjectURL
type DescribeSObjectURL struct {
	RowTemplate *string `json:"rowTemplate,omitempty"`
	Describe *string `json:"describe,omitempty"`
	Sobject *string `json:"sobject,omitempty"`
}

// NewDescribeSObjectURL instantiates a new DescribeSObjectURL object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeSObjectURL() *DescribeSObjectURL {
	this := DescribeSObjectURL{}
	return &this
}

// NewDescribeSObjectURLWithDefaults instantiates a new DescribeSObjectURL object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeSObjectURLWithDefaults() *DescribeSObjectURL {
	this := DescribeSObjectURL{}
	return &this
}

// GetRowTemplate returns the RowTemplate field value if set, zero value otherwise.
func (o *DescribeSObjectURL) GetRowTemplate() string {
	if o == nil || isNil(o.RowTemplate) {
		var ret string
		return ret
	}
	return *o.RowTemplate
}

// GetRowTemplateOk returns a tuple with the RowTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeSObjectURL) GetRowTemplateOk() (*string, bool) {
	if o == nil || isNil(o.RowTemplate) {
    return nil, false
	}
	return o.RowTemplate, true
}

// HasRowTemplate returns a boolean if a field has been set.
func (o *DescribeSObjectURL) HasRowTemplate() bool {
	if o != nil && !isNil(o.RowTemplate) {
		return true
	}

	return false
}

// SetRowTemplate gets a reference to the given string and assigns it to the RowTemplate field.
func (o *DescribeSObjectURL) SetRowTemplate(v string) {
	o.RowTemplate = &v
}

// GetDescribe returns the Describe field value if set, zero value otherwise.
func (o *DescribeSObjectURL) GetDescribe() string {
	if o == nil || isNil(o.Describe) {
		var ret string
		return ret
	}
	return *o.Describe
}

// GetDescribeOk returns a tuple with the Describe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeSObjectURL) GetDescribeOk() (*string, bool) {
	if o == nil || isNil(o.Describe) {
    return nil, false
	}
	return o.Describe, true
}

// HasDescribe returns a boolean if a field has been set.
func (o *DescribeSObjectURL) HasDescribe() bool {
	if o != nil && !isNil(o.Describe) {
		return true
	}

	return false
}

// SetDescribe gets a reference to the given string and assigns it to the Describe field.
func (o *DescribeSObjectURL) SetDescribe(v string) {
	o.Describe = &v
}

// GetSobject returns the Sobject field value if set, zero value otherwise.
func (o *DescribeSObjectURL) GetSobject() string {
	if o == nil || isNil(o.Sobject) {
		var ret string
		return ret
	}
	return *o.Sobject
}

// GetSobjectOk returns a tuple with the Sobject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeSObjectURL) GetSobjectOk() (*string, bool) {
	if o == nil || isNil(o.Sobject) {
    return nil, false
	}
	return o.Sobject, true
}

// HasSobject returns a boolean if a field has been set.
func (o *DescribeSObjectURL) HasSobject() bool {
	if o != nil && !isNil(o.Sobject) {
		return true
	}

	return false
}

// SetSobject gets a reference to the given string and assigns it to the Sobject field.
func (o *DescribeSObjectURL) SetSobject(v string) {
	o.Sobject = &v
}

func (o DescribeSObjectURL) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.RowTemplate) {
		toSerialize["rowTemplate"] = o.RowTemplate
	}
	if !isNil(o.Describe) {
		toSerialize["describe"] = o.Describe
	}
	if !isNil(o.Sobject) {
		toSerialize["sobject"] = o.Sobject
	}
	return json.Marshal(toSerialize)
}

type NullableDescribeSObjectURL struct {
	value *DescribeSObjectURL
	isSet bool
}

func (v NullableDescribeSObjectURL) Get() *DescribeSObjectURL {
	return v.value
}

func (v *NullableDescribeSObjectURL) Set(val *DescribeSObjectURL) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeSObjectURL) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeSObjectURL) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeSObjectURL(val *DescribeSObjectURL) *NullableDescribeSObjectURL {
	return &NullableDescribeSObjectURL{value: val, isSet: true}
}

func (v NullableDescribeSObjectURL) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeSObjectURL) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


