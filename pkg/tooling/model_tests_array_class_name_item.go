/*
Salesforce Platform REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 56.0
Contact: russell-laboe@outlook.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tooling

import (
	"encoding/json"
)

// TestsArrayClassNameItem struct for TestsArrayClassNameItem
type TestsArrayClassNameItem struct {
	ClassName string `json:"className"`
	TestMethods []string `json:"testMethods,omitempty"`
}

// NewTestsArrayClassNameItem instantiates a new TestsArrayClassNameItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestsArrayClassNameItem(className string) *TestsArrayClassNameItem {
	this := TestsArrayClassNameItem{}
	this.ClassName = className
	return &this
}

// NewTestsArrayClassNameItemWithDefaults instantiates a new TestsArrayClassNameItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestsArrayClassNameItemWithDefaults() *TestsArrayClassNameItem {
	this := TestsArrayClassNameItem{}
	return &this
}

// GetClassName returns the ClassName field value
func (o *TestsArrayClassNameItem) GetClassName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClassName
}

// GetClassNameOk returns a tuple with the ClassName field value
// and a boolean to check if the value has been set.
func (o *TestsArrayClassNameItem) GetClassNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ClassName, true
}

// SetClassName sets field value
func (o *TestsArrayClassNameItem) SetClassName(v string) {
	o.ClassName = v
}

// GetTestMethods returns the TestMethods field value if set, zero value otherwise.
func (o *TestsArrayClassNameItem) GetTestMethods() []string {
	if o == nil || isNil(o.TestMethods) {
		var ret []string
		return ret
	}
	return o.TestMethods
}

// GetTestMethodsOk returns a tuple with the TestMethods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestsArrayClassNameItem) GetTestMethodsOk() ([]string, bool) {
	if o == nil || isNil(o.TestMethods) {
    return nil, false
	}
	return o.TestMethods, true
}

// HasTestMethods returns a boolean if a field has been set.
func (o *TestsArrayClassNameItem) HasTestMethods() bool {
	if o != nil && !isNil(o.TestMethods) {
		return true
	}

	return false
}

// SetTestMethods gets a reference to the given []string and assigns it to the TestMethods field.
func (o *TestsArrayClassNameItem) SetTestMethods(v []string) {
	o.TestMethods = v
}

func (o TestsArrayClassNameItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["className"] = o.ClassName
	}
	if !isNil(o.TestMethods) {
		toSerialize["testMethods"] = o.TestMethods
	}
	return json.Marshal(toSerialize)
}

type NullableTestsArrayClassNameItem struct {
	value *TestsArrayClassNameItem
	isSet bool
}

func (v NullableTestsArrayClassNameItem) Get() *TestsArrayClassNameItem {
	return v.value
}

func (v *NullableTestsArrayClassNameItem) Set(val *TestsArrayClassNameItem) {
	v.value = val
	v.isSet = true
}

func (v NullableTestsArrayClassNameItem) IsSet() bool {
	return v.isSet
}

func (v *NullableTestsArrayClassNameItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestsArrayClassNameItem(val *TestsArrayClassNameItem) *NullableTestsArrayClassNameItem {
	return &NullableTestsArrayClassNameItem{value: val, isSet: true}
}

func (v NullableTestsArrayClassNameItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestsArrayClassNameItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


