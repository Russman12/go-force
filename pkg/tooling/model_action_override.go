/*
Salesforce Platform REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 56.0
Contact: russell-laboe@outlook.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tooling

import (
	"encoding/json"
)

// ActionOverride struct for ActionOverride
type ActionOverride struct {
	FormFactor *string `json:"formFactor,omitempty"`
	IsAvailableInTouch *bool `json:"isAvailableInTouch,omitempty"`
	Name *string `json:"name,omitempty"`
	PageId *string `json:"pageId,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewActionOverride instantiates a new ActionOverride object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionOverride() *ActionOverride {
	this := ActionOverride{}
	return &this
}

// NewActionOverrideWithDefaults instantiates a new ActionOverride object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionOverrideWithDefaults() *ActionOverride {
	this := ActionOverride{}
	return &this
}

// GetFormFactor returns the FormFactor field value if set, zero value otherwise.
func (o *ActionOverride) GetFormFactor() string {
	if o == nil || isNil(o.FormFactor) {
		var ret string
		return ret
	}
	return *o.FormFactor
}

// GetFormFactorOk returns a tuple with the FormFactor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionOverride) GetFormFactorOk() (*string, bool) {
	if o == nil || isNil(o.FormFactor) {
    return nil, false
	}
	return o.FormFactor, true
}

// HasFormFactor returns a boolean if a field has been set.
func (o *ActionOverride) HasFormFactor() bool {
	if o != nil && !isNil(o.FormFactor) {
		return true
	}

	return false
}

// SetFormFactor gets a reference to the given string and assigns it to the FormFactor field.
func (o *ActionOverride) SetFormFactor(v string) {
	o.FormFactor = &v
}

// GetIsAvailableInTouch returns the IsAvailableInTouch field value if set, zero value otherwise.
func (o *ActionOverride) GetIsAvailableInTouch() bool {
	if o == nil || isNil(o.IsAvailableInTouch) {
		var ret bool
		return ret
	}
	return *o.IsAvailableInTouch
}

// GetIsAvailableInTouchOk returns a tuple with the IsAvailableInTouch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionOverride) GetIsAvailableInTouchOk() (*bool, bool) {
	if o == nil || isNil(o.IsAvailableInTouch) {
    return nil, false
	}
	return o.IsAvailableInTouch, true
}

// HasIsAvailableInTouch returns a boolean if a field has been set.
func (o *ActionOverride) HasIsAvailableInTouch() bool {
	if o != nil && !isNil(o.IsAvailableInTouch) {
		return true
	}

	return false
}

// SetIsAvailableInTouch gets a reference to the given bool and assigns it to the IsAvailableInTouch field.
func (o *ActionOverride) SetIsAvailableInTouch(v bool) {
	o.IsAvailableInTouch = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ActionOverride) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionOverride) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ActionOverride) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ActionOverride) SetName(v string) {
	o.Name = &v
}

// GetPageId returns the PageId field value if set, zero value otherwise.
func (o *ActionOverride) GetPageId() string {
	if o == nil || isNil(o.PageId) {
		var ret string
		return ret
	}
	return *o.PageId
}

// GetPageIdOk returns a tuple with the PageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionOverride) GetPageIdOk() (*string, bool) {
	if o == nil || isNil(o.PageId) {
    return nil, false
	}
	return o.PageId, true
}

// HasPageId returns a boolean if a field has been set.
func (o *ActionOverride) HasPageId() bool {
	if o != nil && !isNil(o.PageId) {
		return true
	}

	return false
}

// SetPageId gets a reference to the given string and assigns it to the PageId field.
func (o *ActionOverride) SetPageId(v string) {
	o.PageId = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ActionOverride) GetUrl() string {
	if o == nil || isNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionOverride) GetUrlOk() (*string, bool) {
	if o == nil || isNil(o.Url) {
    return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ActionOverride) HasUrl() bool {
	if o != nil && !isNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ActionOverride) SetUrl(v string) {
	o.Url = &v
}

func (o ActionOverride) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.FormFactor) {
		toSerialize["formFactor"] = o.FormFactor
	}
	if !isNil(o.IsAvailableInTouch) {
		toSerialize["isAvailableInTouch"] = o.IsAvailableInTouch
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.PageId) {
		toSerialize["pageId"] = o.PageId
	}
	if !isNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableActionOverride struct {
	value *ActionOverride
	isSet bool
}

func (v NullableActionOverride) Get() *ActionOverride {
	return v.value
}

func (v *NullableActionOverride) Set(val *ActionOverride) {
	v.value = val
	v.isSet = true
}

func (v NullableActionOverride) IsSet() bool {
	return v.isSet
}

func (v *NullableActionOverride) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionOverride(val *ActionOverride) *NullableActionOverride {
	return &NullableActionOverride{value: val, isSet: true}
}

func (v NullableActionOverride) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionOverride) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


