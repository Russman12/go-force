/*
Salesforce Platform REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 56.0
Contact: russell-laboe@outlook.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tooling

import (
	"encoding/json"
)

// SOSLResult struct for SOSLResult
type SOSLResult struct {
	SearchRecords []map[string]interface{} `json:"searchRecords"`
}

// NewSOSLResult instantiates a new SOSLResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSOSLResult(searchRecords []map[string]interface{}) *SOSLResult {
	this := SOSLResult{}
	this.SearchRecords = searchRecords
	return &this
}

// NewSOSLResultWithDefaults instantiates a new SOSLResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSOSLResultWithDefaults() *SOSLResult {
	this := SOSLResult{}
	return &this
}

// GetSearchRecords returns the SearchRecords field value
func (o *SOSLResult) GetSearchRecords() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.SearchRecords
}

// GetSearchRecordsOk returns a tuple with the SearchRecords field value
// and a boolean to check if the value has been set.
func (o *SOSLResult) GetSearchRecordsOk() ([]map[string]interface{}, bool) {
	if o == nil {
    return nil, false
	}
	return o.SearchRecords, true
}

// SetSearchRecords sets field value
func (o *SOSLResult) SetSearchRecords(v []map[string]interface{}) {
	o.SearchRecords = v
}

func (o SOSLResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["searchRecords"] = o.SearchRecords
	}
	return json.Marshal(toSerialize)
}

type NullableSOSLResult struct {
	value *SOSLResult
	isSet bool
}

func (v NullableSOSLResult) Get() *SOSLResult {
	return v.value
}

func (v *NullableSOSLResult) Set(val *SOSLResult) {
	v.value = val
	v.isSet = true
}

func (v NullableSOSLResult) IsSet() bool {
	return v.isSet
}

func (v *NullableSOSLResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSOSLResult(val *SOSLResult) *NullableSOSLResult {
	return &NullableSOSLResult{value: val, isSet: true}
}

func (v NullableSOSLResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSOSLResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


