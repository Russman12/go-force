/*
Salesforce Platform REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 56.0
Contact: russell-laboe@outlook.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tooling

import (
	"encoding/json"
)

// ExecuteAnonymousResult struct for ExecuteAnonymousResult
type ExecuteAnonymousResult struct {
	Line *int32 `json:"line,omitempty"`
	Column *int32 `json:"column,omitempty"`
	Compiled *bool `json:"compiled,omitempty"`
	Success *bool `json:"success,omitempty"`
	CompileProblem *string `json:"compileProblem,omitempty"`
	ExceptionStackTrace *string `json:"exceptionStackTrace,omitempty"`
	ExceptionMessage *string `json:"exceptionMessage,omitempty"`
}

// NewExecuteAnonymousResult instantiates a new ExecuteAnonymousResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExecuteAnonymousResult() *ExecuteAnonymousResult {
	this := ExecuteAnonymousResult{}
	return &this
}

// NewExecuteAnonymousResultWithDefaults instantiates a new ExecuteAnonymousResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExecuteAnonymousResultWithDefaults() *ExecuteAnonymousResult {
	this := ExecuteAnonymousResult{}
	return &this
}

// GetLine returns the Line field value if set, zero value otherwise.
func (o *ExecuteAnonymousResult) GetLine() int32 {
	if o == nil || isNil(o.Line) {
		var ret int32
		return ret
	}
	return *o.Line
}

// GetLineOk returns a tuple with the Line field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecuteAnonymousResult) GetLineOk() (*int32, bool) {
	if o == nil || isNil(o.Line) {
    return nil, false
	}
	return o.Line, true
}

// HasLine returns a boolean if a field has been set.
func (o *ExecuteAnonymousResult) HasLine() bool {
	if o != nil && !isNil(o.Line) {
		return true
	}

	return false
}

// SetLine gets a reference to the given int32 and assigns it to the Line field.
func (o *ExecuteAnonymousResult) SetLine(v int32) {
	o.Line = &v
}

// GetColumn returns the Column field value if set, zero value otherwise.
func (o *ExecuteAnonymousResult) GetColumn() int32 {
	if o == nil || isNil(o.Column) {
		var ret int32
		return ret
	}
	return *o.Column
}

// GetColumnOk returns a tuple with the Column field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecuteAnonymousResult) GetColumnOk() (*int32, bool) {
	if o == nil || isNil(o.Column) {
    return nil, false
	}
	return o.Column, true
}

// HasColumn returns a boolean if a field has been set.
func (o *ExecuteAnonymousResult) HasColumn() bool {
	if o != nil && !isNil(o.Column) {
		return true
	}

	return false
}

// SetColumn gets a reference to the given int32 and assigns it to the Column field.
func (o *ExecuteAnonymousResult) SetColumn(v int32) {
	o.Column = &v
}

// GetCompiled returns the Compiled field value if set, zero value otherwise.
func (o *ExecuteAnonymousResult) GetCompiled() bool {
	if o == nil || isNil(o.Compiled) {
		var ret bool
		return ret
	}
	return *o.Compiled
}

// GetCompiledOk returns a tuple with the Compiled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecuteAnonymousResult) GetCompiledOk() (*bool, bool) {
	if o == nil || isNil(o.Compiled) {
    return nil, false
	}
	return o.Compiled, true
}

// HasCompiled returns a boolean if a field has been set.
func (o *ExecuteAnonymousResult) HasCompiled() bool {
	if o != nil && !isNil(o.Compiled) {
		return true
	}

	return false
}

// SetCompiled gets a reference to the given bool and assigns it to the Compiled field.
func (o *ExecuteAnonymousResult) SetCompiled(v bool) {
	o.Compiled = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *ExecuteAnonymousResult) GetSuccess() bool {
	if o == nil || isNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecuteAnonymousResult) GetSuccessOk() (*bool, bool) {
	if o == nil || isNil(o.Success) {
    return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *ExecuteAnonymousResult) HasSuccess() bool {
	if o != nil && !isNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *ExecuteAnonymousResult) SetSuccess(v bool) {
	o.Success = &v
}

// GetCompileProblem returns the CompileProblem field value if set, zero value otherwise.
func (o *ExecuteAnonymousResult) GetCompileProblem() string {
	if o == nil || isNil(o.CompileProblem) {
		var ret string
		return ret
	}
	return *o.CompileProblem
}

// GetCompileProblemOk returns a tuple with the CompileProblem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecuteAnonymousResult) GetCompileProblemOk() (*string, bool) {
	if o == nil || isNil(o.CompileProblem) {
    return nil, false
	}
	return o.CompileProblem, true
}

// HasCompileProblem returns a boolean if a field has been set.
func (o *ExecuteAnonymousResult) HasCompileProblem() bool {
	if o != nil && !isNil(o.CompileProblem) {
		return true
	}

	return false
}

// SetCompileProblem gets a reference to the given string and assigns it to the CompileProblem field.
func (o *ExecuteAnonymousResult) SetCompileProblem(v string) {
	o.CompileProblem = &v
}

// GetExceptionStackTrace returns the ExceptionStackTrace field value if set, zero value otherwise.
func (o *ExecuteAnonymousResult) GetExceptionStackTrace() string {
	if o == nil || isNil(o.ExceptionStackTrace) {
		var ret string
		return ret
	}
	return *o.ExceptionStackTrace
}

// GetExceptionStackTraceOk returns a tuple with the ExceptionStackTrace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecuteAnonymousResult) GetExceptionStackTraceOk() (*string, bool) {
	if o == nil || isNil(o.ExceptionStackTrace) {
    return nil, false
	}
	return o.ExceptionStackTrace, true
}

// HasExceptionStackTrace returns a boolean if a field has been set.
func (o *ExecuteAnonymousResult) HasExceptionStackTrace() bool {
	if o != nil && !isNil(o.ExceptionStackTrace) {
		return true
	}

	return false
}

// SetExceptionStackTrace gets a reference to the given string and assigns it to the ExceptionStackTrace field.
func (o *ExecuteAnonymousResult) SetExceptionStackTrace(v string) {
	o.ExceptionStackTrace = &v
}

// GetExceptionMessage returns the ExceptionMessage field value if set, zero value otherwise.
func (o *ExecuteAnonymousResult) GetExceptionMessage() string {
	if o == nil || isNil(o.ExceptionMessage) {
		var ret string
		return ret
	}
	return *o.ExceptionMessage
}

// GetExceptionMessageOk returns a tuple with the ExceptionMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecuteAnonymousResult) GetExceptionMessageOk() (*string, bool) {
	if o == nil || isNil(o.ExceptionMessage) {
    return nil, false
	}
	return o.ExceptionMessage, true
}

// HasExceptionMessage returns a boolean if a field has been set.
func (o *ExecuteAnonymousResult) HasExceptionMessage() bool {
	if o != nil && !isNil(o.ExceptionMessage) {
		return true
	}

	return false
}

// SetExceptionMessage gets a reference to the given string and assigns it to the ExceptionMessage field.
func (o *ExecuteAnonymousResult) SetExceptionMessage(v string) {
	o.ExceptionMessage = &v
}

func (o ExecuteAnonymousResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Line) {
		toSerialize["line"] = o.Line
	}
	if !isNil(o.Column) {
		toSerialize["column"] = o.Column
	}
	if !isNil(o.Compiled) {
		toSerialize["compiled"] = o.Compiled
	}
	if !isNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !isNil(o.CompileProblem) {
		toSerialize["compileProblem"] = o.CompileProblem
	}
	if !isNil(o.ExceptionStackTrace) {
		toSerialize["exceptionStackTrace"] = o.ExceptionStackTrace
	}
	if !isNil(o.ExceptionMessage) {
		toSerialize["exceptionMessage"] = o.ExceptionMessage
	}
	return json.Marshal(toSerialize)
}

type NullableExecuteAnonymousResult struct {
	value *ExecuteAnonymousResult
	isSet bool
}

func (v NullableExecuteAnonymousResult) Get() *ExecuteAnonymousResult {
	return v.value
}

func (v *NullableExecuteAnonymousResult) Set(val *ExecuteAnonymousResult) {
	v.value = val
	v.isSet = true
}

func (v NullableExecuteAnonymousResult) IsSet() bool {
	return v.isSet
}

func (v *NullableExecuteAnonymousResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExecuteAnonymousResult(val *ExecuteAnonymousResult) *NullableExecuteAnonymousResult {
	return &NullableExecuteAnonymousResult{value: val, isSet: true}
}

func (v NullableExecuteAnonymousResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExecuteAnonymousResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


