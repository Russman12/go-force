/*
Salesforce Platform APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 56.0
Contact: russell-laboe@outlook.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"

)

// BulkQueryJobInfo struct for BulkQueryJobInfo
type BulkQueryJobInfo struct {
	// The unique ID for this job.
	Id string `json:"id"`
	// The object type being queried.
	Object string `json:"object"`
	// The ID of the user who created the job.
	CreatedById string `json:"createdById"`
	// The UTC date and time when the job was created.
	CreatedDate string `json:"createdDate"`
	// The UTC date and time when the API last updated the job information.
	SystemModstamp string `json:"systemModstamp"`
	// The current state of processing for the job.
	State string `json:"state"`
	// Reserved for future use. How the request is processed. Currently only parallel mode is supported. (When other modes are added, the API chooses the mode automatically. The mode isn’t user configurable.)
	ConcurrencyMode string `json:"concurrencyMode"`
	// The API version that the job was created in.
	ApiVersion float32 `json:"apiVersion"`
	// The job’s type. For a query job, the type is always V2Query.
	JobType *string `json:"jobType,omitempty"`
	// The number of records processed in this job.
	NumberRecordsProcessed *int64 `json:"numberRecordsProcessed,omitempty"`
	// The number of times that Salesforce attempted to save the results of an operation. Repeated attempts indicate a problem such as a lock contention.
	Retries *int32 `json:"retries,omitempty"`
	// The number of milliseconds taken to process the job.
	TotalProcessingTime *int64 `json:"totalProcessingTime,omitempty"`
	// The type of query.
	Operation string `json:"operation"`
	// The format that is used for the results. Currently the only supported value is CSV.
	ContentType string `json:"contentType"`
	// The column delimiter used for CSV job data. The default value is COMMA.
	ColumnDelimiter *string `json:"columnDelimiter,omitempty"`
	// The line ending used for CSV job data, marking the end of a data row. The default is LF.
	LineEnding *string `json:"lineEnding,omitempty"`
}

// NewBulkQueryJobInfo instantiates a new BulkQueryJobInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkQueryJobInfo(id string, object string, createdById string, createdDate string, systemModstamp string, state string, concurrencyMode string, apiVersion float32, operation string, contentType string) *BulkQueryJobInfo {
	this := BulkQueryJobInfo{}
	this.Id = id
	this.Object = object
	this.CreatedById = createdById
	this.CreatedDate = createdDate
	this.SystemModstamp = systemModstamp
	this.State = state
	this.ConcurrencyMode = concurrencyMode
	this.ApiVersion = apiVersion
	this.Operation = operation
	this.ContentType = contentType
	return &this
}

// NewBulkQueryJobInfoWithDefaults instantiates a new BulkQueryJobInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkQueryJobInfoWithDefaults() *BulkQueryJobInfo {
	this := BulkQueryJobInfo{}
	return &this
}

// GetId returns the Id field value
func (o *BulkQueryJobInfo) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BulkQueryJobInfo) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BulkQueryJobInfo) SetId(v string) {
	o.Id = v
}

// GetObject returns the Object field value
func (o *BulkQueryJobInfo) GetObject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Object
}

// GetObjectOk returns a tuple with the Object field value
// and a boolean to check if the value has been set.
func (o *BulkQueryJobInfo) GetObjectOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Object, true
}

// SetObject sets field value
func (o *BulkQueryJobInfo) SetObject(v string) {
	o.Object = v
}

// GetCreatedById returns the CreatedById field value
func (o *BulkQueryJobInfo) GetCreatedById() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedById
}

// GetCreatedByIdOk returns a tuple with the CreatedById field value
// and a boolean to check if the value has been set.
func (o *BulkQueryJobInfo) GetCreatedByIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.CreatedById, true
}

// SetCreatedById sets field value
func (o *BulkQueryJobInfo) SetCreatedById(v string) {
	o.CreatedById = v
}

// GetCreatedDate returns the CreatedDate field value
func (o *BulkQueryJobInfo) GetCreatedDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value
// and a boolean to check if the value has been set.
func (o *BulkQueryJobInfo) GetCreatedDateOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.CreatedDate, true
}

// SetCreatedDate sets field value
func (o *BulkQueryJobInfo) SetCreatedDate(v string) {
	o.CreatedDate = v
}

// GetSystemModstamp returns the SystemModstamp field value
func (o *BulkQueryJobInfo) GetSystemModstamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SystemModstamp
}

// GetSystemModstampOk returns a tuple with the SystemModstamp field value
// and a boolean to check if the value has been set.
func (o *BulkQueryJobInfo) GetSystemModstampOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.SystemModstamp, true
}

// SetSystemModstamp sets field value
func (o *BulkQueryJobInfo) SetSystemModstamp(v string) {
	o.SystemModstamp = v
}

// GetState returns the State field value
func (o *BulkQueryJobInfo) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *BulkQueryJobInfo) GetStateOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *BulkQueryJobInfo) SetState(v string) {
	o.State = v
}

// GetConcurrencyMode returns the ConcurrencyMode field value
func (o *BulkQueryJobInfo) GetConcurrencyMode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConcurrencyMode
}

// GetConcurrencyModeOk returns a tuple with the ConcurrencyMode field value
// and a boolean to check if the value has been set.
func (o *BulkQueryJobInfo) GetConcurrencyModeOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ConcurrencyMode, true
}

// SetConcurrencyMode sets field value
func (o *BulkQueryJobInfo) SetConcurrencyMode(v string) {
	o.ConcurrencyMode = v
}

// GetApiVersion returns the ApiVersion field value
func (o *BulkQueryJobInfo) GetApiVersion() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value
// and a boolean to check if the value has been set.
func (o *BulkQueryJobInfo) GetApiVersionOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ApiVersion, true
}

// SetApiVersion sets field value
func (o *BulkQueryJobInfo) SetApiVersion(v float32) {
	o.ApiVersion = v
}

// GetJobType returns the JobType field value if set, zero value otherwise.
func (o *BulkQueryJobInfo) GetJobType() string {
	if o == nil || isNil(o.JobType) {
		var ret string
		return ret
	}
	return *o.JobType
}

// GetJobTypeOk returns a tuple with the JobType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkQueryJobInfo) GetJobTypeOk() (*string, bool) {
	if o == nil || isNil(o.JobType) {
    return nil, false
	}
	return o.JobType, true
}

// HasJobType returns a boolean if a field has been set.
func (o *BulkQueryJobInfo) HasJobType() bool {
	if o != nil && !isNil(o.JobType) {
		return true
	}

	return false
}

// SetJobType gets a reference to the given string and assigns it to the JobType field.
func (o *BulkQueryJobInfo) SetJobType(v string) {
	o.JobType = &v
}

// GetNumberRecordsProcessed returns the NumberRecordsProcessed field value if set, zero value otherwise.
func (o *BulkQueryJobInfo) GetNumberRecordsProcessed() int64 {
	if o == nil || isNil(o.NumberRecordsProcessed) {
		var ret int64
		return ret
	}
	return *o.NumberRecordsProcessed
}

// GetNumberRecordsProcessedOk returns a tuple with the NumberRecordsProcessed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkQueryJobInfo) GetNumberRecordsProcessedOk() (*int64, bool) {
	if o == nil || isNil(o.NumberRecordsProcessed) {
    return nil, false
	}
	return o.NumberRecordsProcessed, true
}

// HasNumberRecordsProcessed returns a boolean if a field has been set.
func (o *BulkQueryJobInfo) HasNumberRecordsProcessed() bool {
	if o != nil && !isNil(o.NumberRecordsProcessed) {
		return true
	}

	return false
}

// SetNumberRecordsProcessed gets a reference to the given int64 and assigns it to the NumberRecordsProcessed field.
func (o *BulkQueryJobInfo) SetNumberRecordsProcessed(v int64) {
	o.NumberRecordsProcessed = &v
}

// GetRetries returns the Retries field value if set, zero value otherwise.
func (o *BulkQueryJobInfo) GetRetries() int32 {
	if o == nil || isNil(o.Retries) {
		var ret int32
		return ret
	}
	return *o.Retries
}

// GetRetriesOk returns a tuple with the Retries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkQueryJobInfo) GetRetriesOk() (*int32, bool) {
	if o == nil || isNil(o.Retries) {
    return nil, false
	}
	return o.Retries, true
}

// HasRetries returns a boolean if a field has been set.
func (o *BulkQueryJobInfo) HasRetries() bool {
	if o != nil && !isNil(o.Retries) {
		return true
	}

	return false
}

// SetRetries gets a reference to the given int32 and assigns it to the Retries field.
func (o *BulkQueryJobInfo) SetRetries(v int32) {
	o.Retries = &v
}

// GetTotalProcessingTime returns the TotalProcessingTime field value if set, zero value otherwise.
func (o *BulkQueryJobInfo) GetTotalProcessingTime() int64 {
	if o == nil || isNil(o.TotalProcessingTime) {
		var ret int64
		return ret
	}
	return *o.TotalProcessingTime
}

// GetTotalProcessingTimeOk returns a tuple with the TotalProcessingTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkQueryJobInfo) GetTotalProcessingTimeOk() (*int64, bool) {
	if o == nil || isNil(o.TotalProcessingTime) {
    return nil, false
	}
	return o.TotalProcessingTime, true
}

// HasTotalProcessingTime returns a boolean if a field has been set.
func (o *BulkQueryJobInfo) HasTotalProcessingTime() bool {
	if o != nil && !isNil(o.TotalProcessingTime) {
		return true
	}

	return false
}

// SetTotalProcessingTime gets a reference to the given int64 and assigns it to the TotalProcessingTime field.
func (o *BulkQueryJobInfo) SetTotalProcessingTime(v int64) {
	o.TotalProcessingTime = &v
}

// GetOperation returns the Operation field value
func (o *BulkQueryJobInfo) GetOperation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Operation
}

// GetOperationOk returns a tuple with the Operation field value
// and a boolean to check if the value has been set.
func (o *BulkQueryJobInfo) GetOperationOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Operation, true
}

// SetOperation sets field value
func (o *BulkQueryJobInfo) SetOperation(v string) {
	o.Operation = v
}

// GetContentType returns the ContentType field value
func (o *BulkQueryJobInfo) GetContentType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value
// and a boolean to check if the value has been set.
func (o *BulkQueryJobInfo) GetContentTypeOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ContentType, true
}

// SetContentType sets field value
func (o *BulkQueryJobInfo) SetContentType(v string) {
	o.ContentType = v
}

// GetColumnDelimiter returns the ColumnDelimiter field value if set, zero value otherwise.
func (o *BulkQueryJobInfo) GetColumnDelimiter() string {
	if o == nil || isNil(o.ColumnDelimiter) {
		var ret string
		return ret
	}
	return *o.ColumnDelimiter
}

// GetColumnDelimiterOk returns a tuple with the ColumnDelimiter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkQueryJobInfo) GetColumnDelimiterOk() (*string, bool) {
	if o == nil || isNil(o.ColumnDelimiter) {
    return nil, false
	}
	return o.ColumnDelimiter, true
}

// HasColumnDelimiter returns a boolean if a field has been set.
func (o *BulkQueryJobInfo) HasColumnDelimiter() bool {
	if o != nil && !isNil(o.ColumnDelimiter) {
		return true
	}

	return false
}

// SetColumnDelimiter gets a reference to the given string and assigns it to the ColumnDelimiter field.
func (o *BulkQueryJobInfo) SetColumnDelimiter(v string) {
	o.ColumnDelimiter = &v
}

// GetLineEnding returns the LineEnding field value if set, zero value otherwise.
func (o *BulkQueryJobInfo) GetLineEnding() string {
	if o == nil || isNil(o.LineEnding) {
		var ret string
		return ret
	}
	return *o.LineEnding
}

// GetLineEndingOk returns a tuple with the LineEnding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkQueryJobInfo) GetLineEndingOk() (*string, bool) {
	if o == nil || isNil(o.LineEnding) {
    return nil, false
	}
	return o.LineEnding, true
}

// HasLineEnding returns a boolean if a field has been set.
func (o *BulkQueryJobInfo) HasLineEnding() bool {
	if o != nil && !isNil(o.LineEnding) {
		return true
	}

	return false
}

// SetLineEnding gets a reference to the given string and assigns it to the LineEnding field.
func (o *BulkQueryJobInfo) SetLineEnding(v string) {
	o.LineEnding = &v
}

func (o BulkQueryJobInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["object"] = o.Object
	}
	if true {
		toSerialize["createdById"] = o.CreatedById
	}
	if true {
		toSerialize["createdDate"] = o.CreatedDate
	}
	if true {
		toSerialize["systemModstamp"] = o.SystemModstamp
	}
	if true {
		toSerialize["state"] = o.State
	}
	if true {
		toSerialize["concurrencyMode"] = o.ConcurrencyMode
	}
	if true {
		toSerialize["apiVersion"] = o.ApiVersion
	}
	if !isNil(o.JobType) {
		toSerialize["jobType"] = o.JobType
	}
	if !isNil(o.NumberRecordsProcessed) {
		toSerialize["numberRecordsProcessed"] = o.NumberRecordsProcessed
	}
	if !isNil(o.Retries) {
		toSerialize["retries"] = o.Retries
	}
	if !isNil(o.TotalProcessingTime) {
		toSerialize["totalProcessingTime"] = o.TotalProcessingTime
	}
	if true {
		toSerialize["operation"] = o.Operation
	}
	if true {
		toSerialize["contentType"] = o.ContentType
	}
	if !isNil(o.ColumnDelimiter) {
		toSerialize["columnDelimiter"] = o.ColumnDelimiter
	}
	if !isNil(o.LineEnding) {
		toSerialize["lineEnding"] = o.LineEnding
	}
	return json.Marshal(toSerialize)
}

type NullableBulkQueryJobInfo struct {
	value *BulkQueryJobInfo
	isSet bool
}

func (v NullableBulkQueryJobInfo) Get() *BulkQueryJobInfo {
	return v.value
}

func (v *NullableBulkQueryJobInfo) Set(val *BulkQueryJobInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkQueryJobInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkQueryJobInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkQueryJobInfo(val *BulkQueryJobInfo) *NullableBulkQueryJobInfo {
	return &NullableBulkQueryJobInfo{value: val, isSet: true}
}

func (v NullableBulkQueryJobInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkQueryJobInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


