// {{classname}} {{{description}}}{{^description}}struct for {{{classname}}}{{/description}}
type {{classname}} struct {
{{#allOf}}
    {{{.}}}
{{/allOf}}
}

// New{{classname}} instantiates a new {{classname}} object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func New{{classname}}({{#requiredVars}}{{nameInCamelCase}} {{dataType}}{{^-last}}, {{/-last}}{{/requiredVars}}) *{{classname}} {
    this := {{classname}}{}
{{#allVars}}
    {{#required}}
    this.Set{{name}}({{nameInCamelCase}})
    {{/required}}
    {{^required}}
        {{#defaultValue}}
            {{^vendorExtensions.x-golang-is-container}}
                {{^isReadOnly}}
                    {{#isNullable}}
                        var {{nameInCamelCase}} {{{datatypeWithEnum}}} = {{{.}}}
                        this.{{name}} = *New{{{dataType}}}(&{{nameInCamelCase}})
                    {{/isNullable}}
                    {{^isNullable}}
                        var {{nameInCamelCase}} {{{dataType}}} = {{{.}}}
                        this.{{name}} = &{{nameInCamelCase}}
                    {{/isNullable}}
                {{/isReadOnly}}
            {{/vendorExtensions.x-golang-is-container}}
        {{/defaultValue}}
    {{/required}}
{{/allVars}}
return &this
}

// New{{classname}}WithDefaults instantiates a new {{classname}} object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func New{{classname}}WithDefaults() *{{classname}} {
this := {{classname}}{}
{{#vars}}
    {{#defaultValue}}
        {{^vendorExtensions.x-golang-is-container}}
            {{^isReadOnly}}
                {{#isNullable}}
                {{!we use datatypeWithEnum here, since it will represent the non-nullable name of the datatype, e.g. int64 for NullableInt64}}
                    var {{nameInCamelCase}} {{{datatypeWithEnum}}} = {{{.}}}
                    this.{{name}} = *New{{{dataType}}}(&{{nameInCamelCase}})
                {{/isNullable}}
                {{^isNullable}}
                    var {{nameInCamelCase}} {{{dataType}}} = {{{.}}}
                    this.{{name}} = {{^required}}&{{/required}}{{nameInCamelCase}}
                {{/isNullable}}
            {{/isReadOnly}}
        {{/vendorExtensions.x-golang-is-container}}
    {{/defaultValue}}
{{/vars}}
return &this
}
